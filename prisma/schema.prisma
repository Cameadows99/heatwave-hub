generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String           @id @default(cuid())
  name        String
  email       String           @unique
  password    String
  role        Role             @default(WORKER)
  team        String?
  createdAt   DateTime         @default(now())
  rsvps       RSVP[]
  timeEntries TimeEntry[]
  timeOff     TimeOffRequest[]
}

model TimeEntry {
  id        String    @id @default(cuid())
  userId    String
  clockIn   DateTime
  clockOut  DateTime?
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
}

model TimeOffRequest {
  id        String        @id @default(cuid())
  userId    String
  startDate DateTime
  endDate   DateTime
  reason    String
  status    TimeOffStatus @default(PENDING)
  createdAt DateTime      @default(now())
  user      User          @relation(fields: [userId], references: [id])
}

model Event {
  id          String   @id @default(cuid())
  title       String
  date        DateTime
  location    String
  description String
  createdAt   DateTime @default(now())
  rsvps       RSVP[]
}

model RSVP {
  id        String   @id @default(cuid())
  userId    String
  eventId   String
  createdAt DateTime @default(now())
  event     Event    @relation(fields: [eventId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, eventId])
}

enum Role {
  ADMIN
  WORKER
}

enum TimeOffStatus {
  PENDING
  APPROVED
  DENIED
}
